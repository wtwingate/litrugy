# Generated by Django 5.0.6 on 2024-06-30 02:40

import json
from django.db import migrations


def day_lesson(apps, _):
    Day = apps.get_model("lectionary", "Day")
    Lesson = apps.get_model("lectionary", "Lesson")
    with open("data/lectionary.json") as f:
        data = json.load(f)

    for day_name, v in data.items():
        if day_name == "Christmas Day" or day_name == "Easter Day":
            for service_name, years in v.items():
                for year_name, lessons in years.items():
                    if year_name == "Year A":
                        day_object = Day.objects.get(
                            name=f"{day_name}: {service_name}", year="A"
                        )
                    elif year_name == "Year B":
                        day_object = Day.objects.get(
                            name=f"{day_name}: {service_name}", year="B"
                        )
                    else:
                        day_object = Day.objects.get(
                            name=f"{day_name}: {service_name}", year="C"
                        )

                    for lesson_list in lessons.values():
                        scripture = " or ".join(lesson_list)
                        lesson_object = Lesson.objects.get(scripture=scripture)

                        lesson_object.days.add(day_object)
                        lesson_object.save()
                        day_object.lessons.add(lesson_object)
                        day_object.save()
        else:
            for year_name, lessons in v.items():
                if year_name == "Year A":
                    day_object = Day.objects.get(name=day_name, year="A")
                elif year_name == "Year B":
                    day_object = Day.objects.get(name=day_name, year="B")
                else:
                    day_object = Day.objects.get(name=day_name, year="C")

                for lesson_list in lessons.values():
                    scripture = " or ".join(lesson_list)
                    lesson_object = Lesson.objects.get(scripture=scripture)

                    lesson_object.days.add(day_object)
                    lesson_object.save()
                    day_object.lessons.add(lesson_object)
                    day_object.save()


class Migration(migrations.Migration):
    dependencies = [
        ("lectionary", "0003_seed_lesson"),
    ]

    operations = [migrations.RunPython(day_lesson)]
